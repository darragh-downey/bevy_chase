"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

# buildifier: disable=load
load(
    "@rules_rust//rust:defs.bzl",
    "rust_binary",
    "rust_library",
    "rust_proc_macro",
    "rust_test",
)

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//cargo", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "notice",  # MIT from expression "MIT OR Apache-2.0"
])

# Generated Targets

# Unsupported target "busy_behavior" with type "example" omitted

# Unsupported target "idle_behavior" with type "example" omitted

rust_library(
    name = "bevy_tasks",
    srcs = glob(["**/*.rs"]),
    aliases = {
    },
    crate_features = [
    ],
    crate_root = "src/lib.rs",
    data = [],
    edition = "2021",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "crate-name=bevy_tasks",
        "manual",
    ],
    version = "0.6.0",
    # buildifier: leave-alone
    deps = [
        "@cargo__async_channel__1_6_1//:async_channel",
        "@cargo__async_executor__1_4_1//:async_executor",
        "@cargo__event_listener__2_5_2//:event_listener",
        "@cargo__futures_lite__1_12_0//:futures_lite",
        "@cargo__num_cpus__1_13_1//:num_cpus",
    ] + selects.with_or({
        # cfg(target_arch = "wasm32")
        (
            "@rules_rust//rust/platform:wasm32-unknown-unknown",
            "@rules_rust//rust/platform:wasm32-wasi",
        ): [
            "@cargo__wasm_bindgen_futures__0_4_29//:wasm_bindgen_futures",
        ],
        "//conditions:default": [],
    }),
)
